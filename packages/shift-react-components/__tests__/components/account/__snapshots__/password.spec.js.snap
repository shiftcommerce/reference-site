// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the form 1`] = `
<AccountPassword
  formOptions={
    Object {
      "confirmationPlaceholder": "placeholder 3",
      "newPasswordPlaceholder": "placeholder 2",
      "oldPasswordPlaceholder": "placeholder 1",
      "title": Object {
        "translation": "test title",
        "visible": true,
      },
    }
  }
>
  <div
    className="c-account-password"
  >
    <h1
      className="c-account-password__title"
    >
      test title
    </h1>
    <Formik
      enableReinitialize={true}
      initialValues={
        Object {
          "newPassword": "",
          "newPasswordConfirmation": "",
          "oldPassword": "",
        }
      }
      isInitialValid={false}
      render={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      validationSchema={
        ObjectSchema {
          "_blacklist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "_conditions": Array [],
          "_defaultDefault": [Function],
          "_deps": Array [],
          "_excludedEdges": Array [],
          "_exclusive": Object {},
          "_mutate": false,
          "_nodes": Array [
            "newPasswordConfirmation",
            "newPassword",
          ],
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "object",
          "_typeError": [Function],
          "_whitelist": RefSet {
            "list": Set {},
            "refs": Map {},
          },
          "fields": Object {
            "newPassword": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "max": true,
                "min": true,
                "required": false,
              },
              "_mutate": false,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "tests": Array [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
            "newPasswordConfirmation": StringSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_deps": Array [],
              "_exclusive": Object {
                "required": false,
              },
              "_mutate": false,
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "string",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {
                  null,
                },
                "refs": Map {
                  "newPassword" => Reference {
                    "_get": [Function],
                    "isContext": false,
                    "isSelf": false,
                    "key": "newPassword",
                    "map": [Function],
                    "path": "newPassword",
                    "prefix": "$",
                  },
                },
              },
              "_whitelistError": [Function],
              "tests": Array [
                [Function],
                [Function],
              ],
              "transforms": Array [
                [Function],
              ],
            },
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        }
      }
    >
      <Form
        className="c-account-password__form"
      >
        <Component
          className="c-account-password__form"
          formik={
            Object {
              "dirty": false,
              "errors": Object {},
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleReset": [Function],
              "handleSubmit": [Function],
              "initialValues": Object {
                "newPassword": "",
                "newPasswordConfirmation": "",
                "oldPassword": "",
              },
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "registerField": [Function],
              "resetForm": [Function],
              "setError": [Function],
              "setErrors": [Function],
              "setFieldError": [Function],
              "setFieldTouched": [Function],
              "setFieldValue": [Function],
              "setFormikState": [Function],
              "setStatus": [Function],
              "setSubmitting": [Function],
              "setTouched": [Function],
              "setValues": [Function],
              "status": undefined,
              "submitCount": 0,
              "submitForm": [Function],
              "touched": Object {},
              "unregisterField": [Function],
              "validate": undefined,
              "validateField": [Function],
              "validateForm": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
              "validationSchema": ObjectSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_defaultDefault": [Function],
                "_deps": Array [],
                "_excludedEdges": Array [],
                "_exclusive": Object {},
                "_mutate": false,
                "_nodes": Array [
                  "newPasswordConfirmation",
                  "newPassword",
                ],
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "object",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "fields": Object {
                  "newPassword": StringSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_deps": Array [],
                    "_exclusive": Object {
                      "max": true,
                      "min": true,
                      "required": false,
                    },
                    "_mutate": false,
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "string",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "tests": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                    "transforms": Array [
                      [Function],
                    ],
                  },
                  "newPasswordConfirmation": StringSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_deps": Array [],
                    "_exclusive": Object {
                      "required": false,
                    },
                    "_mutate": false,
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "string",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {
                        null,
                      },
                      "refs": Map {
                        "newPassword" => Reference {
                          "_get": [Function],
                          "isContext": false,
                          "isSelf": false,
                          "key": "newPassword",
                          "map": [Function],
                          "path": "newPassword",
                          "prefix": "$",
                        },
                      },
                    },
                    "_whitelistError": [Function],
                    "tests": Array [
                      [Function],
                      [Function],
                    ],
                    "transforms": Array [
                      [Function],
                    ],
                  },
                },
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
              },
              "values": Object {
                "newPassword": "",
                "newPasswordConfirmation": "",
                "oldPassword": "",
              },
            }
          }
        >
          <form
            className="c-account-password__form"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="c-account-password__old-input"
            >
              <label
                className="o-form__input-label"
                htmlFor="oldPassword"
              >
                Old Password
              </label>
              <FormikConnect(FieldInner)
                autoComplete="current-password"
                className="o-form__input-field o-form__input-block"
                name="oldPassword"
                placeholder="placeholder 1"
                type="password"
              >
                <FieldInner
                  autoComplete="current-password"
                  className="o-form__input-field o-form__input-block"
                  formik={
                    Object {
                      "dirty": false,
                      "errors": Object {},
                      "handleBlur": [Function],
                      "handleChange": [Function],
                      "handleReset": [Function],
                      "handleSubmit": [Function],
                      "initialValues": Object {
                        "newPassword": "",
                        "newPasswordConfirmation": "",
                        "oldPassword": "",
                      },
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "registerField": [Function],
                      "resetForm": [Function],
                      "setError": [Function],
                      "setErrors": [Function],
                      "setFieldError": [Function],
                      "setFieldTouched": [Function],
                      "setFieldValue": [Function],
                      "setFormikState": [Function],
                      "setStatus": [Function],
                      "setSubmitting": [Function],
                      "setTouched": [Function],
                      "setValues": [Function],
                      "status": undefined,
                      "submitCount": 0,
                      "submitForm": [Function],
                      "touched": Object {},
                      "unregisterField": [Function],
                      "validate": undefined,
                      "validateField": [Function],
                      "validateForm": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                      "validationSchema": ObjectSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_defaultDefault": [Function],
                        "_deps": Array [],
                        "_excludedEdges": Array [],
                        "_exclusive": Object {},
                        "_mutate": false,
                        "_nodes": Array [
                          "newPasswordConfirmation",
                          "newPassword",
                        ],
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "object",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "fields": Object {
                          "newPassword": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "max": true,
                              "min": true,
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "newPasswordConfirmation": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {
                                null,
                              },
                              "refs": Map {
                                "newPassword" => Reference {
                                  "_get": [Function],
                                  "isContext": false,
                                  "isSelf": false,
                                  "key": "newPassword",
                                  "map": [Function],
                                  "path": "newPassword",
                                  "prefix": "$",
                                },
                              },
                            },
                            "_whitelistError": [Function],
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                        },
                        "tests": Array [],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "values": Object {
                        "newPassword": "",
                        "newPasswordConfirmation": "",
                        "oldPassword": "",
                      },
                    }
                  }
                  name="oldPassword"
                  placeholder="placeholder 1"
                  type="password"
                >
                  <input
                    autoComplete="current-password"
                    className="o-form__input-field o-form__input-block"
                    name="oldPassword"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="placeholder 1"
                    type="password"
                    value=""
                  />
                </FieldInner>
              </FormikConnect(FieldInner)>
            </div>
            <div
              className="c-account-password__new-inputs-group"
            >
              <div
                className="c-account-password__new-inputs"
              >
                <label
                  className="o-form__input-label"
                  htmlFor="newPassword"
                >
                  New Password
                </label>
                <FormikConnect(FieldInner)
                  autoComplete="new-password"
                  className="o-form__input-field o-form__input-block"
                  name="newPassword"
                  placeholder="placeholder 2"
                  type="password"
                >
                  <FieldInner
                    autoComplete="new-password"
                    className="o-form__input-field o-form__input-block"
                    formik={
                      Object {
                        "dirty": false,
                        "errors": Object {},
                        "handleBlur": [Function],
                        "handleChange": [Function],
                        "handleReset": [Function],
                        "handleSubmit": [Function],
                        "initialValues": Object {
                          "newPassword": "",
                          "newPasswordConfirmation": "",
                          "oldPassword": "",
                        },
                        "isSubmitting": false,
                        "isValid": false,
                        "isValidating": false,
                        "registerField": [Function],
                        "resetForm": [Function],
                        "setError": [Function],
                        "setErrors": [Function],
                        "setFieldError": [Function],
                        "setFieldTouched": [Function],
                        "setFieldValue": [Function],
                        "setFormikState": [Function],
                        "setStatus": [Function],
                        "setSubmitting": [Function],
                        "setTouched": [Function],
                        "setValues": [Function],
                        "status": undefined,
                        "submitCount": 0,
                        "submitForm": [Function],
                        "touched": Object {},
                        "unregisterField": [Function],
                        "validate": undefined,
                        "validateField": [Function],
                        "validateForm": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                        "validationSchema": ObjectSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_defaultDefault": [Function],
                          "_deps": Array [],
                          "_excludedEdges": Array [],
                          "_exclusive": Object {},
                          "_mutate": false,
                          "_nodes": Array [
                            "newPasswordConfirmation",
                            "newPassword",
                          ],
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "object",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "fields": Object {
                            "newPassword": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "max": true,
                                "min": true,
                                "required": false,
                              },
                              "_mutate": false,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "tests": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                            },
                            "newPasswordConfirmation": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "required": false,
                              },
                              "_mutate": false,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {
                                  null,
                                },
                                "refs": Map {
                                  "newPassword" => Reference {
                                    "_get": [Function],
                                    "isContext": false,
                                    "isSelf": false,
                                    "key": "newPassword",
                                    "map": [Function],
                                    "path": "newPassword",
                                    "prefix": "$",
                                  },
                                },
                              },
                              "_whitelistError": [Function],
                              "tests": Array [
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                            },
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "values": Object {
                          "newPassword": "",
                          "newPasswordConfirmation": "",
                          "oldPassword": "",
                        },
                      }
                    }
                    name="newPassword"
                    placeholder="placeholder 2"
                    type="password"
                  >
                    <input
                      autoComplete="new-password"
                      className="o-form__input-field o-form__input-block"
                      name="newPassword"
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder="placeholder 2"
                      type="password"
                      value=""
                    />
                  </FieldInner>
                </FormikConnect(FieldInner)>
                <div
                  className="o-form__input-field__error"
                >
                  <FormikConnect(ErrorMessageImpl)
                    name="newPassword"
                  >
                    <ErrorMessageImpl
                      formik={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "newPassword": "",
                            "newPasswordConfirmation": "",
                            "oldPassword": "",
                          },
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "status": undefined,
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validate": undefined,
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "validationSchema": ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": false,
                            "_nodes": Array [
                              "newPasswordConfirmation",
                              "newPassword",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "newPassword": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "max": true,
                                  "min": true,
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "newPasswordConfirmation": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {
                                    null,
                                  },
                                  "refs": Map {
                                    "newPassword" => Reference {
                                      "_get": [Function],
                                      "isContext": false,
                                      "isSelf": false,
                                      "key": "newPassword",
                                      "map": [Function],
                                      "path": "newPassword",
                                      "prefix": "$",
                                    },
                                  },
                                },
                                "_whitelistError": [Function],
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "values": Object {
                            "newPassword": "",
                            "newPasswordConfirmation": "",
                            "oldPassword": "",
                          },
                        }
                      }
                      name="newPassword"
                    />
                  </FormikConnect(ErrorMessageImpl)>
                </div>
              </div>
              <div
                className="c-account-password__new-inputs"
              >
                <label
                  className="o-form__input-label"
                  htmlFor="newPasswordConfirmation"
                >
                  Confirm New Password
                </label>
                <FormikConnect(FieldInner)
                  autoComplete="confirm-password"
                  className="o-form__input-field o-form__input-block"
                  name="newPasswordConfirmation"
                  placeholder="placeholder 3"
                  type="password"
                >
                  <FieldInner
                    autoComplete="confirm-password"
                    className="o-form__input-field o-form__input-block"
                    formik={
                      Object {
                        "dirty": false,
                        "errors": Object {},
                        "handleBlur": [Function],
                        "handleChange": [Function],
                        "handleReset": [Function],
                        "handleSubmit": [Function],
                        "initialValues": Object {
                          "newPassword": "",
                          "newPasswordConfirmation": "",
                          "oldPassword": "",
                        },
                        "isSubmitting": false,
                        "isValid": false,
                        "isValidating": false,
                        "registerField": [Function],
                        "resetForm": [Function],
                        "setError": [Function],
                        "setErrors": [Function],
                        "setFieldError": [Function],
                        "setFieldTouched": [Function],
                        "setFieldValue": [Function],
                        "setFormikState": [Function],
                        "setStatus": [Function],
                        "setSubmitting": [Function],
                        "setTouched": [Function],
                        "setValues": [Function],
                        "status": undefined,
                        "submitCount": 0,
                        "submitForm": [Function],
                        "touched": Object {},
                        "unregisterField": [Function],
                        "validate": undefined,
                        "validateField": [Function],
                        "validateForm": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                        "validationSchema": ObjectSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_defaultDefault": [Function],
                          "_deps": Array [],
                          "_excludedEdges": Array [],
                          "_exclusive": Object {},
                          "_mutate": false,
                          "_nodes": Array [
                            "newPasswordConfirmation",
                            "newPassword",
                          ],
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "object",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "fields": Object {
                            "newPassword": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "max": true,
                                "min": true,
                                "required": false,
                              },
                              "_mutate": false,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "tests": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                            },
                            "newPasswordConfirmation": StringSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_deps": Array [],
                              "_exclusive": Object {
                                "required": false,
                              },
                              "_mutate": false,
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "string",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {
                                  null,
                                },
                                "refs": Map {
                                  "newPassword" => Reference {
                                    "_get": [Function],
                                    "isContext": false,
                                    "isSelf": false,
                                    "key": "newPassword",
                                    "map": [Function],
                                    "path": "newPassword",
                                    "prefix": "$",
                                  },
                                },
                              },
                              "_whitelistError": [Function],
                              "tests": Array [
                                [Function],
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                              ],
                            },
                          },
                          "tests": Array [],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "values": Object {
                          "newPassword": "",
                          "newPasswordConfirmation": "",
                          "oldPassword": "",
                        },
                      }
                    }
                    name="newPasswordConfirmation"
                    placeholder="placeholder 3"
                    type="password"
                  >
                    <input
                      autoComplete="confirm-password"
                      className="o-form__input-field o-form__input-block"
                      name="newPasswordConfirmation"
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder="placeholder 3"
                      type="password"
                      value=""
                    />
                  </FieldInner>
                </FormikConnect(FieldInner)>
                <div
                  className="o-form__input-field__error"
                >
                  <FormikConnect(ErrorMessageImpl)
                    name="newPasswordConfirmation"
                  >
                    <ErrorMessageImpl
                      formik={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "newPassword": "",
                            "newPasswordConfirmation": "",
                            "oldPassword": "",
                          },
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "status": undefined,
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validate": undefined,
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "validationSchema": ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": false,
                            "_nodes": Array [
                              "newPasswordConfirmation",
                              "newPassword",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "newPassword": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "max": true,
                                  "min": true,
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "newPasswordConfirmation": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {
                                    null,
                                  },
                                  "refs": Map {
                                    "newPassword" => Reference {
                                      "_get": [Function],
                                      "isContext": false,
                                      "isSelf": false,
                                      "key": "newPassword",
                                      "map": [Function],
                                      "path": "newPassword",
                                      "prefix": "$",
                                    },
                                  },
                                },
                                "_whitelistError": [Function],
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "values": Object {
                            "newPassword": "",
                            "newPasswordConfirmation": "",
                            "oldPassword": "",
                          },
                        }
                      }
                      name="newPasswordConfirmation"
                    />
                  </FormikConnect(ErrorMessageImpl)>
                </div>
              </div>
            </div>
            <Button
              aria-label="Update password"
              className="c-password__button o-button-sml u-margin-top-none u-margin-bottom-none"
              disabled={true}
              label="Update password"
              status="disabled"
              type="submit"
            >
              <button
                aria-label="Update password"
                className="c-password__button o-button-sml u-margin-top-none u-margin-bottom-none o-button o-button--disabled o-button--disabled"
                disabled={true}
                role="button"
                tabIndex="0"
                type="submit"
              >
                Update password
              </button>
            </Button>
          </form>
        </Component>
      </Form>
    </Formik>
  </div>
</AccountPassword>
`;
