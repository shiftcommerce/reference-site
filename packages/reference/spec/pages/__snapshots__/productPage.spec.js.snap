// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Processing state handling: displays error message, when there is an error in loading product 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getAction": [Function],
      "getActions": [Function],
      "getState": [Function],
      "isActionDispatched": [Function],
      "isActionTypeDispatched": [Function],
      "subscribe": [Function],
    }
  }
>
  <Product
    dispatch={[Function]}
    product={
      Object {
        "data": Array [],
        "error": true,
        "loading": false,
      }
    }
  >
    <h1>
      Unable to load product.
    </h1>
  </Product>
</Provider>
`;

exports[`Processing state handling: displays loading message, when there is no error and product is loading from db 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getAction": [Function],
      "getActions": [Function],
      "getState": [Function],
      "isActionDispatched": [Function],
      "isActionTypeDispatched": [Function],
      "subscribe": [Function],
    }
  }
>
  <Product
    dispatch={[Function]}
    product={
      Object {
        "data": Array [],
        "error": false,
        "loading": true,
      }
    }
  >
    <h1>
      Loading product...
    </h1>
  </Product>
</Provider>
`;

exports[`Processing state handling: displays relevant message, when product data is empty 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getAction": [Function],
      "getActions": [Function],
      "getState": [Function],
      "isActionDispatched": [Function],
      "isActionTypeDispatched": [Function],
      "subscribe": [Function],
    }
  }
>
  <Product
    dispatch={[Function]}
    product={Object {}}
  >
    <h1>
      Unable to load product.
    </h1>
  </Product>
</Provider>
`;
